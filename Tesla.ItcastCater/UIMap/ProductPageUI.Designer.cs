// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Tesla.ItcastCater.UIMap.ProductPageUIClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class ProductPageUI
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinButton uIBtnCategoryButton = this.UI餐饮管理系统Window.UIBtnCategoryWindow.UIBtnCategoryButton;
            WinButton uI增加产品Button = this.UIFrmCategoryWindow.UI增加产品Window.UI增加产品Button;
            WinComboBox uICmbCategoryComboBox = this.UIFrmChangeProductWindow.UICmbCategoryWindow.UICmbCategoryComboBox;
            WinEdit uITxtNameEdit = this.UIFrmChangeProductWindow.UITxtNameWindow.UITxtNameEdit;
            WinEdit uITxtNumEdit = this.UIFrmChangeProductWindow.UITxtNumWindow.UITxtNumEdit;
            WinEdit uITxtCostEdit = this.UIFrmChangeProductWindow.UITxtCostWindow.UITxtCostEdit;
            WinEdit uITxtPriceEdit = this.UIFrmChangeProductWindow.UITxtPriceWindow.UITxtPriceEdit;
            WinEdit uITxtSpellEdit = this.UIFrmChangeProductWindow.UITxtSpellWindow.UITxtSpellEdit;
            WinEdit uITxtUnitEdit = this.UIFrmChangeProductWindow.UITxtUnitWindow.UITxtUnitEdit;
            WinEdit uITxtStockEdit = this.UIFrmChangeProductWindow.UITxtStockWindow.UITxtStockEdit;
            WinClient uIFrmChangeProductClient = this.UIFrmChangeProductWindow.UIFrmChangeProductClient;
            WinEdit uITxtRemarkEdit = this.UIFrmChangeProductWindow.UITxtRemarkWindow.UITxtRemarkEdit;
            WinButton uI确定Button = this.UIFrmChangeProductWindow.UI确定Window.UI确定Button;
            WinButton uI确定Button1 = this.UI确定Window.UI确定Button;
            WinButton uI关闭Button = this.UIFrmCategoryWindow.UIFrmCategoryTitleBar.UI关闭Button;
            #endregion

            // Click 'btnCategory' button
            Mouse.Click(uIBtnCategoryButton, new Point(31, 35));

            // Click '增加产品' button
            Mouse.Click(uI增加产品Button, new Point(46, 13));

            // Select '香烟' in 'cmbCategory' combo box
            uICmbCategoryComboBox.SelectedItem = this.RecordedMethod1Params.UICmbCategoryComboBoxSelectedItem;

            // Type '1' in 'txtName' text box
            uITxtNameEdit.Text = this.RecordedMethod1Params.UITxtNameEditText;

            // Type '1' in 'txtNum' text box
            uITxtNumEdit.Text = this.RecordedMethod1Params.UITxtNumEditText;

            // Type '1' in 'txtCost' text box
            uITxtCostEdit.Text = this.RecordedMethod1Params.UITxtCostEditText;

            // Type '1' in 'txtPrice' text box
            uITxtPriceEdit.Text = this.RecordedMethod1Params.UITxtPriceEditText;

            // Type '1' in 'txtSpell' text box
            uITxtSpellEdit.Text = this.RecordedMethod1Params.UITxtSpellEditText;

            // Type '1' in 'txtUnit' text box
            uITxtUnitEdit.Text = this.RecordedMethod1Params.UITxtUnitEditText;

            // Type '1' in 'txtStock' text box
            uITxtStockEdit.Text = this.RecordedMethod1Params.UITxtStockEditText;

            // Click 'FrmChangeProduct' client
            Mouse.Click(uIFrmChangeProductClient, new Point(143, 332));

            // Type '1' in 'txtRemark' text box
            uITxtRemarkEdit.Text = this.RecordedMethod1Params.UITxtRemarkEditText;

            // Click '确定' button
            Mouse.Click(uI确定Button, new Point(29, 3));

            // Click '确定' button
            Mouse.Click(uI确定Button1, new Point(31, 17));

            // Click '关闭' button
            Mouse.Click(uI关闭Button, new Point(26, 7));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UI餐饮管理系统Window UI餐饮管理系统Window
        {
            get
            {
                if ((this.mUI餐饮管理系统Window == null))
                {
                    this.mUI餐饮管理系统Window = new UI餐饮管理系统Window();
                }
                return this.mUI餐饮管理系统Window;
            }
        }
        
        public UIFrmCategoryWindow UIFrmCategoryWindow
        {
            get
            {
                if ((this.mUIFrmCategoryWindow == null))
                {
                    this.mUIFrmCategoryWindow = new UIFrmCategoryWindow();
                }
                return this.mUIFrmCategoryWindow;
            }
        }
        
        public UIFrmChangeProductWindow UIFrmChangeProductWindow
        {
            get
            {
                if ((this.mUIFrmChangeProductWindow == null))
                {
                    this.mUIFrmChangeProductWindow = new UIFrmChangeProductWindow();
                }
                return this.mUIFrmChangeProductWindow;
            }
        }
        
        public UI确定Window1 UI确定Window
        {
            get
            {
                if ((this.mUI确定Window == null))
                {
                    this.mUI确定Window = new UI确定Window1();
                }
                return this.mUI确定Window;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UI餐饮管理系统Window mUI餐饮管理系统Window;
        
        private UIFrmCategoryWindow mUIFrmCategoryWindow;
        
        private UIFrmChangeProductWindow mUIFrmChangeProductWindow;
        
        private UI确定Window1 mUI确定Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select '香烟' in 'cmbCategory' combo box
        /// </summary>
        public string UICmbCategoryComboBoxSelectedItem = "香烟";
        
        /// <summary>
        /// Type '1' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtNum' text box
        /// </summary>
        public string UITxtNumEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtCost' text box
        /// </summary>
        public string UITxtCostEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtPrice' text box
        /// </summary>
        public string UITxtPriceEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtSpell' text box
        /// </summary>
        public string UITxtSpellEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtUnit' text box
        /// </summary>
        public string UITxtUnitEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtStock' text box
        /// </summary>
        public string UITxtStockEditText = "1";
        
        /// <summary>
        /// Type '1' in 'txtRemark' text box
        /// </summary>
        public string UITxtRemarkEditText = "1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UI餐饮管理系统Window : WinWindow
    {
        
        public UI餐饮管理系统Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "餐饮管理系统";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("餐饮管理系统");
            #endregion
        }
        
        #region Properties
        public UIBtnCategoryWindow UIBtnCategoryWindow
        {
            get
            {
                if ((this.mUIBtnCategoryWindow == null))
                {
                    this.mUIBtnCategoryWindow = new UIBtnCategoryWindow(this);
                }
                return this.mUIBtnCategoryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIBtnCategoryWindow mUIBtnCategoryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBtnCategoryWindow : WinWindow
    {
        
        public UIBtnCategoryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCategory";
            this.WindowTitles.Add("餐饮管理系统");
            #endregion
        }
        
        #region Properties
        public WinButton UIBtnCategoryButton
        {
            get
            {
                if ((this.mUIBtnCategoryButton == null))
                {
                    this.mUIBtnCategoryButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBtnCategoryButton.WindowTitles.Add("餐饮管理系统");
                    #endregion
                }
                return this.mUIBtnCategoryButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBtnCategoryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmCategoryWindow : WinWindow
    {
        
        public UIFrmCategoryWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "FrmCategory";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("FrmCategory");
            #endregion
        }
        
        #region Properties
        public UI增加产品Window UI增加产品Window
        {
            get
            {
                if ((this.mUI增加产品Window == null))
                {
                    this.mUI增加产品Window = new UI增加产品Window(this);
                }
                return this.mUI增加产品Window;
            }
        }
        
        public UIFrmCategoryTitleBar UIFrmCategoryTitleBar
        {
            get
            {
                if ((this.mUIFrmCategoryTitleBar == null))
                {
                    this.mUIFrmCategoryTitleBar = new UIFrmCategoryTitleBar(this);
                }
                return this.mUIFrmCategoryTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UI增加产品Window mUI增加产品Window;
        
        private UIFrmCategoryTitleBar mUIFrmCategoryTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UI增加产品Window : WinWindow
    {
        
        public UI增加产品Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddPro";
            this.WindowTitles.Add("FrmCategory");
            #endregion
        }
        
        #region Properties
        public WinButton UI增加产品Button
        {
            get
            {
                if ((this.mUI增加产品Button == null))
                {
                    this.mUI增加产品Button = new WinButton(this);
                    #region Search Criteria
                    this.mUI增加产品Button.SearchProperties[WinButton.PropertyNames.Name] = "增加产品";
                    this.mUI增加产品Button.WindowTitles.Add("FrmCategory");
                    #endregion
                }
                return this.mUI增加产品Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI增加产品Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmCategoryTitleBar : WinTitleBar
    {
        
        public UIFrmCategoryTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("FrmCategory");
            #endregion
        }
        
        #region Properties
        public WinButton UI关闭Button
        {
            get
            {
                if ((this.mUI关闭Button == null))
                {
                    this.mUI关闭Button = new WinButton(this);
                    #region Search Criteria
                    this.mUI关闭Button.SearchProperties[WinButton.PropertyNames.Name] = "关闭";
                    this.mUI关闭Button.WindowTitles.Add("FrmCategory");
                    #endregion
                }
                return this.mUI关闭Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI关闭Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmChangeProductWindow : WinWindow
    {
        
        public UIFrmChangeProductWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "FrmChangeProduct";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public UICmbCategoryWindow UICmbCategoryWindow
        {
            get
            {
                if ((this.mUICmbCategoryWindow == null))
                {
                    this.mUICmbCategoryWindow = new UICmbCategoryWindow(this);
                }
                return this.mUICmbCategoryWindow;
            }
        }
        
        public UITxtNameWindow UITxtNameWindow
        {
            get
            {
                if ((this.mUITxtNameWindow == null))
                {
                    this.mUITxtNameWindow = new UITxtNameWindow(this);
                }
                return this.mUITxtNameWindow;
            }
        }
        
        public UITxtNumWindow UITxtNumWindow
        {
            get
            {
                if ((this.mUITxtNumWindow == null))
                {
                    this.mUITxtNumWindow = new UITxtNumWindow(this);
                }
                return this.mUITxtNumWindow;
            }
        }
        
        public UITxtCostWindow UITxtCostWindow
        {
            get
            {
                if ((this.mUITxtCostWindow == null))
                {
                    this.mUITxtCostWindow = new UITxtCostWindow(this);
                }
                return this.mUITxtCostWindow;
            }
        }
        
        public UITxtPriceWindow UITxtPriceWindow
        {
            get
            {
                if ((this.mUITxtPriceWindow == null))
                {
                    this.mUITxtPriceWindow = new UITxtPriceWindow(this);
                }
                return this.mUITxtPriceWindow;
            }
        }
        
        public UITxtSpellWindow UITxtSpellWindow
        {
            get
            {
                if ((this.mUITxtSpellWindow == null))
                {
                    this.mUITxtSpellWindow = new UITxtSpellWindow(this);
                }
                return this.mUITxtSpellWindow;
            }
        }
        
        public UITxtUnitWindow UITxtUnitWindow
        {
            get
            {
                if ((this.mUITxtUnitWindow == null))
                {
                    this.mUITxtUnitWindow = new UITxtUnitWindow(this);
                }
                return this.mUITxtUnitWindow;
            }
        }
        
        public UITxtStockWindow UITxtStockWindow
        {
            get
            {
                if ((this.mUITxtStockWindow == null))
                {
                    this.mUITxtStockWindow = new UITxtStockWindow(this);
                }
                return this.mUITxtStockWindow;
            }
        }
        
        public WinClient UIFrmChangeProductClient
        {
            get
            {
                if ((this.mUIFrmChangeProductClient == null))
                {
                    this.mUIFrmChangeProductClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFrmChangeProductClient.SearchProperties[WinControl.PropertyNames.Name] = "FrmChangeProduct";
                    this.mUIFrmChangeProductClient.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUIFrmChangeProductClient;
            }
        }
        
        public UITxtRemarkWindow UITxtRemarkWindow
        {
            get
            {
                if ((this.mUITxtRemarkWindow == null))
                {
                    this.mUITxtRemarkWindow = new UITxtRemarkWindow(this);
                }
                return this.mUITxtRemarkWindow;
            }
        }
        
        public UI确定Window UI确定Window
        {
            get
            {
                if ((this.mUI确定Window == null))
                {
                    this.mUI确定Window = new UI确定Window(this);
                }
                return this.mUI确定Window;
            }
        }
        #endregion
        
        #region Fields
        private UICmbCategoryWindow mUICmbCategoryWindow;
        
        private UITxtNameWindow mUITxtNameWindow;
        
        private UITxtNumWindow mUITxtNumWindow;
        
        private UITxtCostWindow mUITxtCostWindow;
        
        private UITxtPriceWindow mUITxtPriceWindow;
        
        private UITxtSpellWindow mUITxtSpellWindow;
        
        private UITxtUnitWindow mUITxtUnitWindow;
        
        private UITxtStockWindow mUITxtStockWindow;
        
        private WinClient mUIFrmChangeProductClient;
        
        private UITxtRemarkWindow mUITxtRemarkWindow;
        
        private UI确定Window mUI确定Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICmbCategoryWindow : WinWindow
    {
        
        public UICmbCategoryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbCategory";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbCategoryComboBox
        {
            get
            {
                if ((this.mUICmbCategoryComboBox == null))
                {
                    this.mUICmbCategoryComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICmbCategoryComboBox.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUICmbCategoryComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbCategoryComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtNameWindow : WinWindow
    {
        
        public UITxtNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "原价";
                    this.mUITxtNameEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtNumWindow : WinWindow
    {
        
        public UITxtNumWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNum";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNumEdit
        {
            get
            {
                if ((this.mUITxtNumEdit == null))
                {
                    this.mUITxtNumEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNumEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtNumEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNumEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtCostWindow : WinWindow
    {
        
        public UITxtCostWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCost";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtCostEdit
        {
            get
            {
                if ((this.mUITxtCostEdit == null))
                {
                    this.mUITxtCostEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtCostEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtCostEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtCostEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtPriceWindow : WinWindow
    {
        
        public UITxtPriceWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPrice";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPriceEdit
        {
            get
            {
                if ((this.mUITxtPriceEdit == null))
                {
                    this.mUITxtPriceEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPriceEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtPriceEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPriceEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtSpellWindow : WinWindow
    {
        
        public UITxtSpellWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSpell";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSpellEdit
        {
            get
            {
                if ((this.mUITxtSpellEdit == null))
                {
                    this.mUITxtSpellEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSpellEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtSpellEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSpellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtUnitWindow : WinWindow
    {
        
        public UITxtUnitWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtUnit";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtUnitEdit
        {
            get
            {
                if ((this.mUITxtUnitEdit == null))
                {
                    this.mUITxtUnitEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUnitEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtUnitEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtUnitEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtStockWindow : WinWindow
    {
        
        public UITxtStockWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtStock";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtStockEdit
        {
            get
            {
                if ((this.mUITxtStockEdit == null))
                {
                    this.mUITxtStockEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtStockEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtStockEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtStockEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtRemarkWindow : WinWindow
    {
        
        public UITxtRemarkWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtRemark";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtRemarkEdit
        {
            get
            {
                if ((this.mUITxtRemarkEdit == null))
                {
                    this.mUITxtRemarkEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtRemarkEdit.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUITxtRemarkEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtRemarkEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UI确定Window : WinWindow
    {
        
        public UI确定Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOk";
            this.WindowTitles.Add("FrmChangeProduct");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定Button
        {
            get
            {
                if ((this.mUI确定Button == null))
                {
                    this.mUI确定Button = new WinButton(this);
                    #region Search Criteria
                    this.mUI确定Button.SearchProperties[WinButton.PropertyNames.Name] = "确定";
                    this.mUI确定Button.WindowTitles.Add("FrmChangeProduct");
                    #endregion
                }
                return this.mUI确定Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UI确定Window1 : WinWindow
    {
        
        public UI确定Window1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "确定";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("确定");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定Button
        {
            get
            {
                if ((this.mUI确定Button == null))
                {
                    this.mUI确定Button = new WinButton(this);
                    #region Search Criteria
                    this.mUI确定Button.SearchProperties[WinButton.PropertyNames.Name] = "确定";
                    this.mUI确定Button.WindowTitles.Add("确定");
                    #endregion
                }
                return this.mUI确定Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定Button;
        #endregion
    }
}
